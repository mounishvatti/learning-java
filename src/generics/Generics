Just in the similar manner how templates are present in C++, similarly in java there is a concept of generics.

#include <iostream>
using namespace std;

template <class T>
T sum (T a, T b){
    return a+b;
}

int main() {
    int a = 10, b = 30;

    double c = 1.45, d = 4.67;

    cout << sum<int>(a, b) << endl;
    cout << sum<double>(c, d) << endl;
    
    return 0;
}

// Generic class with one type parameter 'T'
class Box<T> {
    private T content;

    public void setContent(T content) {
        this.content = content;
    }

    public T getContent() {
        return content;
    }
}

public class Main {
    public static void main(String[] args) {
        // Creating a Box for Integer type
        Box<Integer> integerBox = new Box<>();
        integerBox.setContent(123);
        System.out.println("Integer content: " + integerBox.getContent());

        // Creating a Box for String type
        Box<String> stringBox = new Box<>();
        stringBox.setContent("Hello Generics");
        System.out.println("String content: " + stringBox.getContent());
    }
}